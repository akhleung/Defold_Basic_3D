function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_camera_projection")
	msg.post("camera", "acquire_camera_focus")

	-- rotate the cube
	go.animate(".", "euler.z", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_INOUTQUAD, 6)
	go.animate(".", "euler.x", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_INOUTQUAD, 9)
	go.animate(".", "euler.y", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_INOUTQUAD, 12)

	go.animate("/logo", "euler.y", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 8)
	
	-- position directional light
	self.light = vmath.vector4(0, 0, go.get_position().z + 1, 0)
	go.set("#cube", "light", self.light)
	go.set("#quad", "light", self.light)
	go.set("#sphere", "light", self.light)
end

local profiling = false
function on_input(self, action_id, action)

	local pressed = false
	local released = false
	local repeated = false
	-- make these flags mutually exclusive because action.pressed and action.repeated may be true at the same time
	if action.pressed then
		pressed = true
	elseif action.released then
		released = true
	elseif action.repeated then
		repeated = true
	end

	-- move directional light based on input
	self.light.x = 2 * ((action.x - 480) / 480)
	self.light.y = 2 * ((action.y - 320) / 320)
	go.set("#cube", "light", self.light)
	go.set("#quad", "light", self.light)
	go.set("#sphere", "light", self.light)

	if action_id == hash("key_p") and pressed then
		profiling = not profiling
		profiler.enable_ui(profiling)
		return
	end
end