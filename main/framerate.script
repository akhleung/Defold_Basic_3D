local render_state = require "render.render_state"

local draw_frame

local frames = 0
local elapsed = 0
local avg_fps = 0
local text_pos = vmath.vector3(10, 20, 1)
local text_col = vmath.vector4(1, 0, 0, 1)
function init(self)
	timer.delay(1, true, function()
		avg_fps = frames / elapsed
		frames = 0
		elapsed = 0
	end)
end

local payload = {}
function update(self, dt)

	elapsed = elapsed + dt
	frames = frames + 1

	payload.text = string.format("AVG FPS: %d", avg_fps)
	payload.position = text_pos
	payload.color = text_col
	msg.post(
		"@render:",
		"draw_debug_text",
		payload
	)
	-- draw_frame()
end

draw_frame = function()
	local WIDTH = render_state.WIDTH
	local HEIGHT = render_state.HEIGHT
	if not WIDTH or not HEIGHT then return end
	if WIDTH == 0 or HEIGHT == 0 then return end
	msg.post(
		"@render:",
		"draw_line",
		{
			start_point = vmath.vector3(10, 10, 1),
			end_point = vmath.vector3(WIDTH - 10, 10, 1),
			color = text_col
		}
	)
	msg.post(
		"@render:",
		"draw_line",
		{
			start_point = vmath.vector3(WIDTH - 10, 10, 1),
			end_point = vmath.vector3(WIDTH - 10, HEIGHT - 10, 1),
			color = text_col
		}
	)
	msg.post(
		"@render:",
		"draw_line",
		{
			start_point = vmath.vector3(WIDTH - 10, HEIGHT - 10, 1),
			end_point = vmath.vector3(10, HEIGHT - 10, 1),
			color = text_col
		}
	)
	msg.post(
		"@render:",
		"draw_line",
		{
			start_point = vmath.vector3(10, HEIGHT - 10, 1),
			end_point = vmath.vector3(10, 10, 1),
			color = text_col
		}
	)
end